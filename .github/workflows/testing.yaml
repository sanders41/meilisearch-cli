name: Testing

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Poetry and add to path
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        echo "${HOME}/.local/bin" >> $GITHUB_PATH
    - name: Configure poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    - name: Cache poetry venv
      uses: actions/cache@v2
      id: poetry-cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: venv-${{ runner.os }}-poetry-
    - name: Install Dependencies
      if: steps.poetry-cache.outputs.cache-hit != 'true'
      run: poetry install
    - name: Isort check
      run: |
        poetry run isort meilisearch_cli tests --check-only
    - name: Black check
      run: |
        poetry run black meilisearch_cli tests --check
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 meilisearch_cli tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 meilisearch_cli tests --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    - name: mypy check
      run: |
        poetry run mypy meilisearch_cli
  testing:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry and add to path
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        echo "${HOME}/.local/bin" >> $GITHUB_PATH
    - name: Configure poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    - name: Configure poetry Python 3.10
      if: matrix.python-version == '3.10'  # Poetry installs are currently failing with the experimental installer on 3.10
      run: |
        poetry config experimental.new-installer false
    - name: Cache poetry venv
      uses: actions/cache@v2
      id: poetry-cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: venv-${{ runner.os }}-poetry-
    - name: Install Dependencies
      if: steps.poetry-cache.outputs.cache-hit != 'true'
      run: poetry install
    - name: MeiliSearch (latest version) setup with Docker
      run: docker run -d -p 7700:7700 getmeili/meilisearch:latest ./meilisearch --no-analytics=true --master-key=masterKey
    - name: Test with pytest --cov=meilisearch_cli --cov-report=xml
      run: |
        poetry run pytest
    - name: Upload coverage
      uses: codecov/codecov-action@v2.1.0
      with:
        fail_ci_if_error: true
